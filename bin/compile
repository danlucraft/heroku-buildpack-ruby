#!/usr/bin/env ruby

require 'pathname'

# sync output
$stdout.sync = true

build_dir = Pathname.new(File.expand_path(ARGV[0]))
cache_dir = ARGV[1]

$:.unshift File.expand_path("../../lib", __FILE__)

require "language_pack"

if relative_code_path = ENV["RELATIVE_CODE_PATH"]
  code_dir = build_dir.join(relative_code_path)
  puts "-----> Replacing repo with code from #{relative_code_path}/"
  FileUtils.mkdir(code_dir.join("vendor").to_s)
  Dir[build_dir.to_s + "/*"].each do |path|
    path = File.expand_path(path)
    unless path == code_dir.to_s
      FileUtils.mv(path, code_dir.join("vendor").join(File.basename(path)).to_s)
    end
  end

  FileUtils.cp_r(Dir.glob(code_dir.to_s + "/*"), build_dir.to_s)
  FileUtils.rm_rf(code_dir.to_s)
end

LanguagePack::Instrument.trace 'compile', 'app.compile' do
  if pack = LanguagePack.detect(build_dir, cache_dir)
    pack.topic("Compiling #{pack.name}")
    pack.log("compile") do
      pack.compile
    end
  end
end
